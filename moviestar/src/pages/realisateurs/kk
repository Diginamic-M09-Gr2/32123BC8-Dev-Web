/**
 * Fonction appelée lorsqu'un réalisateur est cliqué.
 * Récupère les films associés au réalisateur et affiche une fenêtre modale.
 * @async
 * @param {Object} realisateur - Les informations du réalisateur cliqué.
 * @param {number} index - L'index du réalisateur dans la liste.
 * @returns {Promise<void>} Une Promise vide.
 */
const handleRealisateurClick = async (realisateur, index) => {
    try {
        console.log('Clicked Realisateur:', realisateur);

        // Vérifie si l'ID du réalisateur est défini
        if (realisateur.idRealisateur !== undefined) {
            console.log('Realisateur ID:', realisateur.idRealisateur);

            // Récupère les données des films associés au réalisateur
            const filmsData = await backendRealisateurService.fetchRealisateurFilms(
                realisateur.idRealisateur
            );

            console.log('Films Data:', filmsData);

            // Vérifie si les données des films sont un tableau
            if (Array.isArray(filmsData.data)) {
                // Affiche une fenêtre modale avec les données des films et le nom du réalisateur
                setModalFilms({
                    data: filmsData.data,
                    realisateurName: realisateur.nom,
                });

                setModalOpen(true);
            } else {
                // Affiche une erreur si les données des films ne sont pas valides
                console.error('Invalid or missing films data:', filmsData);
            }

            // ... code existant
        } else {
            // Affiche une erreur si l'ID du réalisateur n'est pas défini
            console.error('Realisateur ID is undefined.');
        }
    } catch (error) {
        // Gère les erreurs lors de la récupération des films
        console.error('Error fetching films:', error);
    }
};
